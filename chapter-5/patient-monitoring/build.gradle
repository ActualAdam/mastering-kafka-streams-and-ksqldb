plugins {
  id 'application'

  // https://plugins.gradle.org/plugin/com.github.sherter.google-java-format
  id 'com.github.sherter.google-java-format' version '0.8'

  // https://plugins.gradle.org/plugin/net.ltgt.errorprone
  id 'net.ltgt.errorprone' version '0.6.1'
}

ext {
  // https://search.maven.org/artifact/org.apache.kafka/kafka-streams
  kafkaStreamsVersion = '2.5.0'

  // https://mvnrepository.com/artifact/com.google.errorprone/error_prone_core
  errorProneCoreVersion = "2.3.2"

  // https://mvnrepository.com/artifact/com.google.errorprone/javac
  // required for Java 8 support
  errorProneJavacVersion = "9+181-r4173-1"

  // https://search.maven.org/artifact/com.google.code.gson/gson
  gsonVersion = '2.8.5'

  // https://search.maven.org/artifact/io.javalin/javalin
  javalinVersion = '3.7.0'

  // https://search.maven.org/artifact/com.squareup.okhttp3/okhttp
  okhttpVersion = '4.3.1'

  // https://mvnrepository.com/artifact/org.slf4j/slf4j-api
  slf4jVersion = '1.7.3'

  // https://search.maven.org/artifact/com.typesafe/config
  typesafeConfigVersion = '1.3.3'
}

application {
  mainClassName = 'com.magicalpipelines.App'
}

repositories {
  mavenCentral()
}

dependencies {
  errorprone "com.google.errorprone:error_prone_core:${errorProneCoreVersion}"
  errorproneJavac "com.google.errorprone:javac:${errorProneJavacVersion}"

  implementation "org.apache.kafka:kafka-streams:${kafkaStreamsVersion}"

  // config
  implementation "com.typesafe:config:${typesafeConfigVersion}"

  // logging
  implementation "org.slf4j:slf4j-api:${slf4jVersion}"
  implementation 'ch.qos.logback:logback-classic:1.2.3'

  // required for custom serdes
  implementation "com.google.code.gson:gson:${gsonVersion}"

  // required for interactive queries
  // (server)
  implementation "io.javalin:javalin:${javalinVersion}"
  // (client)
  implementation "com.squareup.okhttp3:okhttp:${okhttpVersion}"

}

tasks.withType(JavaCompile).configureEach { javaCompile ->
  javaCompile.dependsOn 'googleJavaFormat'
  options.encoding = 'UTF-8'
  options.errorprone {
    disableWarningsInGeneratedCode = true
    excludedPaths = '.*/build/generated/.*'
  }
}

task runApp(type: JavaExec) {
  main = application.mainClassName
  classpath = sourceSets.main.runtimeClasspath 
  systemProperties = [
    'host': 'localhost',
    'port': '7000',
    'stateDir': '/tmp/kafka-streams'
  ]
}

run.dependsOn runApp
